name: mongo-sharding-repl
services:

  configSrv1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv 
    restart: always
    ports:
      - "28010:27019"
    volumes:
      - configsrv1_data:/data/db
    command: '--configsvr --replSet config --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv2 
    restart: always
    ports:
      - "28011:27019"
    volumes:
      - configsrv2_data:/data/db
    command: '--configsvr --replSet config --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv3
    restart: always
    ports:
      - "28012:27019"
    volumes:
      - configsrv3_data:/data/db
    command: '--configsvr --replSet config --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-1
    restart: always
    ports:
      - "28020:27018"
    volumes:
      - shard1_1_data:/data/db
    command: '--shardsvr --replSet shard1 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "28021:27018"
    volumes:
      - shard1_2_data:/data/db
    command: '--shardsvr --replSet shard1 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "28022:27018"
    volumes:
      - shard1_3_data:/data/db
    command: '--shardsvr --replSet shard1 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-1
    restart: always
    ports:
      - "28030:27018"
    volumes:
      - shard2_1_data:/data/db
    command: '--shardsvr --replSet shard2 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  shard2-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "28031:27018"
    volumes:
      - shard2_2_data:/data/db
    command: '--shardsvr --replSet shard2 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "28032:27018"
    volumes:
      - shard2_3_data:/data/db
    command: '--shardsvr --replSet shard2 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "28040:27017"
    command: 'mongos --configdb config/configSrv1:27019,configSrv2:27019,configSrv3:27019 --bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - configSrv1
      - configSrv2
      - configSrv3

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27017"
      MONGODB_DATABASE_NAME: "somedb"
    depends_on:
      - mongos_router
      - shard1-1
      - shard1-2
      - shard1-3
      - shard2-1
      - shard2-2
      - shard2-3


volumes:
  configsrv1_data:
  configsrv2_data:
  configsrv3_data:
  shard1_1_data:
  shard1_2_data:
  shard1_3_data:
  shard2_1_data:
  shard2_2_data:
  shard2_3_data: